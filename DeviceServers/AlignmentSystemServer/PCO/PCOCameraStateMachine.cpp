/*----- PROTECTED REGION ID(PCOCameraStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        PCOCameraStateMachine.cpp
//
// description : State machine file for the PCOCamera class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <PCOCamera.h>

/*----- PROTECTED REGION END -----*/	//	PCOCamera::PCOCameraStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace PCOCamera_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : PCOCamera::is_exposureTime_allowed()
 *	Description : Execution allowed for exposureTime attribute
 */
//--------------------------------------------------------
bool PCOCamera::is_exposureTime_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for exposureTime attribute in Write access.
	/*----- PROTECTED REGION ID(PCOCamera::exposureTimeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::exposureTimeStateAllowed_WRITE

	//	Not any excluded states for exposureTime attribute in read access.
	/*----- PROTECTED REGION ID(PCOCamera::exposureTimeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::exposureTimeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PCOCamera::is_frameRate_allowed()
 *	Description : Execution allowed for frameRate attribute
 */
//--------------------------------------------------------
bool PCOCamera::is_frameRate_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for frameRate attribute in Write access.
	/*----- PROTECTED REGION ID(PCOCamera::frameRateStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::frameRateStateAllowed_WRITE

	//	Not any excluded states for frameRate attribute in read access.
	/*----- PROTECTED REGION ID(PCOCamera::frameRateStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::frameRateStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PCOCamera::is_triggerMode_allowed()
 *	Description : Execution allowed for triggerMode attribute
 */
//--------------------------------------------------------
bool PCOCamera::is_triggerMode_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for triggerMode attribute in Write access.
	/*----- PROTECTED REGION ID(PCOCamera::triggerModeStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::triggerModeStateAllowed_WRITE

	//	Not any excluded states for triggerMode attribute in read access.
	/*----- PROTECTED REGION ID(PCOCamera::triggerModeStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::triggerModeStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PCOCamera::is_Gain_allowed()
 *	Description : Execution allowed for Gain attribute
 */
//--------------------------------------------------------
bool PCOCamera::is_Gain_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Gain attribute in Write access.
	/*----- PROTECTED REGION ID(PCOCamera::GainStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::GainStateAllowed_WRITE

	//	Not any excluded states for Gain attribute in read access.
	/*----- PROTECTED REGION ID(PCOCamera::GainStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::GainStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : PCOCamera::is_beamProfileImg_allowed()
 *	Description : Execution allowed for beamProfileImg attribute
 */
//--------------------------------------------------------
bool PCOCamera::is_beamProfileImg_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for beamProfileImg attribute in read access.
	/*----- PROTECTED REGION ID(PCOCamera::beamProfileImgStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::beamProfileImgStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : PCOCamera::is_GrabImage_allowed()
 *	Description : Execution allowed for GrabImage attribute
 */
//--------------------------------------------------------
bool PCOCamera::is_GrabImage_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for GrabImage command.
	/*----- PROTECTED REGION ID(PCOCamera::GrabImageStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	PCOCamera::GrabImageStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(PCOCamera::PCOCameraStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	PCOCamera::PCOCameraStateAllowed.AdditionalMethods

}	//	End of namespace
